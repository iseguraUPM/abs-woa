################################################################################################################
## FORMATO #####################################################################################################
################################################################################################################
(<id>) {<DD-MM-YYYY HH:MM>} <Title> : <Author>
 1. [<tag>]
    <...>
 2. [<tag>]
    <...>
----------------------------------------------------------------------------------------------------------------
(<id>) <DD-MM-YYYY HH:MM> <Title> : <Author>
 1. [<tag>]
    <...>
 2. [<tag>] ref [<tag> <id>.1], [<tag> <id>.2]
    <...>
################################################################################################################
#### TAGS ######################################################################################################
################################################################################################################
- [REFACT]
- [FEATURE]
- [NEW]
- [REMOVE]
- [OPTIMIZE]
- [FIX]
- [BUG]
- [TEST]
- [COMPLETE]
- [TODO]
- [NOTE]
################################################################################################################
----------------------------------------------------------------------------------------------------------------
(0) {27-03-2019 18:45} Uploaded changelog : Inaki
 1. [COMPLETE]
    I uploaded the changelog template to record any progress made. The idea is that this can be used as a
	developer journal.
----------------------------------------------------------------------------------------------------------------
(1) {28-03-2019 12:00} Cleaning and implementing other scenarios : Inaki
 1. [COMPLETE]
    Added some missing javadoc.
 2. [REMOVE]
    Removed TownHall class. Buildings for now are specified in the "contents" of the MapCell an done in the
	ontology.
 3. [NEW]
    Added temporal solution for unit position placement. This is done to check scenarios where a unit is
	in a cell without a TownHall. The same with MapCell ownership. A temporary numerical ID was added
	to Tribe until a general solution is provided.
 4. [TEST]
    All scenarios are now tested. Also, multiple tribe agents where created with their respective units working
	and communicating as expected.
----------------------------------------------------------------------------------------------------------------
 (2) {01-04-2019 15:20} Rollback system : Inaki
 1. [NEW]
    First iteration of rollback system. This is implemented in the case of a unit creation. If the game is over
	it must stop ongoing operations by a "rollback" and perform some actions depending on the task. In the 
	case of the unit creation refund the resources and send a FAILURE to the requester unit.
 2. [NOTE] ref [NEW 2.1]
    I tried implementing the above mechanic using the method "onEnd" from "Behaviour" class but it did not work
	for me.
----------------------------------------------------------------------------------------------------------------
 (3) {02-04-2019 15:00} Unit positioning system : Inaki
 1. [REFACT]
    Changed the way map cells are saved in the world map. As suggested only occupied cells will remain stored.
	when there is no cell at a correct coordinate an empty cell is provided.
 2. [TODO]
    We need to decide wether we use our own map cell implementation that later will need to be transformed for
	serialization or use the Ontology "Cell". The latter exposes getters and setters that may not be available
	to certain classes/agents.
 3. [NEW]
    First iteration of the Unit positioning system. This class takes care of the logic of moving units
	 around the map as specified in the documentation. Currently works for rectangular world maps 
	(no need to be square).
----------------------------------------------------------------------------------------------------------------
 (4) {04-04-2019 15:00} Revisited unit positioning system : Inaki
 1. [COMPLETE]
    Finished logic of the unit positioner. To achieve this I changed the interface for Transactions.
----------------------------------------------------------------------------------------------------------------
 (5) {04-04-2019 19:00} A unit asks to move to another contiguous cell : Martin
 1. [COMPLETE]
    Finished "A unit asks to move to another contiguous cell" scenario. In order to make the code more legible and not to have all the 
        behaviours inside setup() method, I have moved both behaviours(createUnit and moveToCell) inside two new methods 
        (startCreateUnitBehaviour and startMoveToCellBehaviour).
----------------------------------------------------------------------------------------------------------------
 (6) {05-04-2019 12:00} Removed service registering : Inaki
 1. [FIX]
    Removed AgTribe and AgUnit service self-registering. Initially this was blindly implemented in all agents. But
      out agents must not be publicly announced.
----------------------------------------------------------------------------------------------------------------
 (7) {06-04-2019 10:00} Added new ontology : Inaki
 1. [NEW]
    Added the new version of the ontology. Also fixed the corresponding dependencies to the changes made.
 2. [TODO]
    The current state of the ontology is quite complicated to implement. The new "Cell" version incorporates
	the content as a Concept (Empty, Building, TownHall etc.), the problem is that this is a list of 
	objects when there must be only one. This also happens when accessing the "Building" type. There is
	also two instances of owner AID: one Cell attribute and one Building attribute.

----------------------------------------------------------------------------------------------------------------
 (8) {06-04-2019 18:30} Implement world movetocell request behaviour: Martin
 1. [NEW]
    Implement two new use cases:
        - 4.2.1. As the world I want to confirm a unit about the result of a movement request so that it can 
            finish the unit movement process
        - 4.2.3. As the world I want to cancel the movement of a unit when the game is over so that I can 
            finish myself without anybody waiting for me.
    Come Action creations updated with the new ontology.
 2. [TODO]
    - As the current Ontology needs to be changed, sended actions needs to be refactored.
    - UnitCellPositioner doesn't take into account that a unit movement needs 6 hours. We have to set the unit
      position six hours after the request. For now, this is done in the AgWorld moveAgent method.
    - We need to set the response message somehow.
    - The protocol controler in is not working. That's the reason why startUnitCreationBehaviour() in AgWorld 
        and protocol checkings in Conversation class are commented.

----------------------------------------------------------------------------------------------------------------
 (9) {07-04-2019 14:08} The word knows visited cells for each tribe: Juan Pablo
 1. [NEW]
    The world stores the information of the cells visited by a tribe, both when units are created and when there
    is a movement performed. (5.5.1)
 2. [TODO]
    Finish also 5.5.2, in which we should inform all units that that cell is now known for the whole tribe.
    Finish also 5.5.3, in which tribes are informed that new cells have been discovered by its units.
----------------------------------------------------------------------------------------------------------------
 (10) {07-04-2019 15:00} Unit movement fixes : Inaki
 1. [FIX] ref [TODO 8.2]
    Fixed unit movement. Now the unit positioner has the control on the behaviour launch. Also, fixed the conversation
	protocol filtering. Temporal solution: specify protocol name (String).
----------------------------------------------------------------------------------------------------------------
 (11) {07-04-2019 17:12} Tribes informed of cells discovered: Juan Pablo
 1. [NEW]
    When a unit discovers a new cell, the tribe gets informed about it and stores the information corresponding to 
    the cell in order to use it for its strategy. (5.5.3)
 2. [TODO]
    Finish also 5.5.2, in which we should inform all units that that cell is now known for the whole tribe.
----------------------------------------------------------------------------------------------------------------
 (12) {07-04-2019 17:30} Unit movement fixes : Juan Pablo
 1. [FIX]
    The world handles the informs that are sent to tribes, and checks whether the tribe already knows the cell
    before sending the inform indicating that a cell has been discovered.
----------------------------------------------------------------------------------------------------------------
 (13) {07-04-2019 18:20} Units informed of cells discovered: Juan Pablo
 1. [NEW]
    When a unit discovers a new cell, all the units belonging to the same cell get informed of the 
    new discovery
----------------------------------------------------------------------------------------------------------------
 (14) {08/04/2019 13:00} Refactoring tribe known cell system : Inaki
 1. [REFACT] ref [NEW 11.1]
    Moved information from known cells to the tribe. The reason is it feels more natural that way. Also, added
      some reusable code to AgWorld.
 2. [REFACT]
    Changed Tribe returning a collection with all the units. Better return an iterator to cycle on all the units.
----------------------------------------------------------------------------------------------------------------