################################################################################################################
## FORMATO #####################################################################################################
################################################################################################################
(<id>) {<DD-MM-YYYY HH:MM>} <Title> : <Author>
 1. [<tag>]
    <...>
 2. [<tag>]
    <...>
----------------------------------------------------------------------------------------------------------------
(<id>) <DD-MM-YYYY HH:MM> <Title> : <Author>
 1. [<tag>]
    <...>
 2. [<tag>] ref [<tag> <id>.1], [<tag> <id>.2]
    <...>
################################################################################################################
#### TAGS ######################################################################################################
################################################################################################################
- [REFACT]
- [FEATURE]
- [NEW]
- [REMOVE]
- [OPTIMIZE]
- [FIX]
- [BUG]
- [TEST]
- [COMPLETE]
- [TODO]
- [NOTE]
################################################################################################################
----------------------------------------------------------------------------------------------------------------
(0) {27-03-2019 18:45} Uploaded changelog : Inaki
 1. [COMPLETE]
    I uploaded the changelog template to record any progress made. The idea is that this can be used as a
	developer journal.
----------------------------------------------------------------------------------------------------------------
(1) {28-03-2019 12:00} Cleaning and implementing other scenarios : Inaki
 1. [COMPLETE]
    Added some missing javadoc.
 2. [REMOVE]
    Removed TownHall class. Buildings for now are specified in the "contents" of the MapCell an done in the
	ontology.
 3. [NEW]
    Added temporal solution for unit position placement. This is done to check scenarios where a unit is
	in a cell without a TownHall. The same with MapCell ownership. A temporary numerical ID was added
	to Tribe until a general solution is provided.
 4. [TEST]
    All scenarios are now tested. Also, multiple tribe agents where created with their respective units working
	and communicating as expected.
----------------------------------------------------------------------------------------------------------------
 (2) {01-04-2019 15:20} Rollback system : Inaki
 1. [NEW]
    First iteration of rollback system. This is implemented in the case of a unit creation. If the game is over
	it must stop ongoing operations by a "rollback" and perform some actions depending on the task. In the 
	case of the unit creation refund the resources and send a FAILURE to the requester unit.
 2. [NOTE] ref [NEW 2.1]
    I tried implementing the above mechanic using the method "onEnd" from "Behaviour" class but it did not work
	for me.
----------------------------------------------------------------------------------------------------------------
 (3) {02-04-2019 15:00} Unit positioning system : Inaki
 1. [REFACT]
    Changed the way map cells are saved in the world map. As suggested only occupied cells will remain stored.
	when there is no cell at a correct coordinate an empty cell is provided.
 2. [TODO]
    We need to decide wether we use our own map cell implementation that later will need to be transformed for
	serialization or use the Ontology "Cell". The latter exposes getters and setters that may not be available
	to certain classes/agents.
 3. [NEW]
    First iteration of the Unit positioning system. This class takes care of the logic of moving units
	 around the map as specified in the documentation. Currently works for rectangular world maps 
	(no need to be square).
----------------------------------------------------------------------------------------------------------------
 (4) {04-04-2019 15:00} Revisited unit positioning system : Inaki
 1. [COMPLETE]
    Finished logic of the unit positioner. To achieve this I changed the interface for Transactions.
----------------------------------------------------------------------------------------------------------------
 (5) {04-04-2019 19:00} A unit asks to move to another contiguous cell : Martin
 1. [COMPLETE]
    Finished "A unit asks to move to another contiguous cell" scenario. In order to make the code more legible and not to have all the 
        behaviours inside setup() method, I have moved both behaviours(createUnit and moveToCell) inside two new methods 
        (startCreateUnitBehaviour and startMoveToCellBehaviour).
----------------------------------------------------------------------------------------------------------------
 (6) {05-04-2019 12:00} Removed service registering : Inaki
 1. [FIX]
    Removed AgTribe and AgUnit service self-registering. Initially this was blindly implemented in all agents. But
      out agents must not be publicly announced.
----------------------------------------------------------------------------------------------------------------
 (7) {06-04-2019 10:00} Added new ontology : Inaki
 1. [NEW]
    Added the new version of the ontology. Also fixed the corresponding dependencies to the changes made.
 2. [TODO]
    The current state of the ontology is quite complicated to implement. The new "Cell" version incorporates
	the content as a Concept (Empty, Building, TownHall etc.), the problem is that this is a list of 
	objects when there must be only one. This also happens when accessing the "Building" type. There is
	also two instances of owner AID: one Cell attribute and one Building attribute.

----------------------------------------------------------------------------------------------------------------
 (8) {06-04-2019 18:30} Implement world movetocell request behaviour: Martin
 1. [NEW]
    Implement two new use cases:
        - 4.2.1. As the world I want to confirm a unit about the result of a movement request so that it can 
            finish the unit movement process
        - 4.2.3. As the world I want to cancel the movement of a unit when the game is over so that I can 
            finish myself without anybody waiting for me.
    Come Action creations updated with the new ontology.
 2. [TODO]
    - As the current Ontology needs to be changed, sended actions needs to be refactored.
    - UnitCellPositioner doesn't take into account that a unit movement needs 6 hours. We have to set the unit
      position six hours after the request. For now, this is done in the AgWorld moveAgent method.
    - We need to set the response message somehow.
    - The protocol controler in is not working. That's the reason why startUnitCreationBehaviour() in AgWorld 
        and protocol checkings in Conversation class are commented.

----------------------------------------------------------------------------------------------------------------
 (9) {07-04-2019 14:08} The word knows visited cells for each tribe: Juan Pablo
 1. [NEW]
    The world stores the information of the cells visited by a tribe, both when units are created and when there
    is a movement performed. (5.5.1)
 2. [TODO]
    Finish also 5.5.2, in which we should inform all units that that cell is now known for the whole tribe.
    Finish also 5.5.3, in which tribes are informed that new cells have been discovered by its units.
----------------------------------------------------------------------------------------------------------------
 (10) {07-04-2019 15:00} Unit movement fixes : Inaki
 1. [FIX] ref [TODO 8.2]
    Fixed unit movement. Now the unit positioner has the control on the behaviour launch. Also, fixed the conversation
	protocol filtering. Temporal solution: specify protocol name (String).
----------------------------------------------------------------------------------------------------------------
 (11) {07-04-2019 17:12} Tribes informed of cells discovered: Juan Pablo
 1. [NEW]
    When a unit discovers a new cell, the tribe gets informed about it and stores the information corresponding to 
    the cell in order to use it for its strategy. (5.5.3)
 2. [TODO]
    Finish also 5.5.2, in which we should inform all units that that cell is now known for the whole tribe.
----------------------------------------------------------------------------------------------------------------
 (12) {07-04-2019 17:30} Unit movement fixes : Juan Pablo
 1. [FIX]
    The world handles the informs that are sent to tribes, and checks whether the tribe already knows the cell
    before sending the inform indicating that a cell has been discovered.
----------------------------------------------------------------------------------------------------------------
 (13) {07-04-2019 18:20} Units informed of cells discovered: Juan Pablo
 1. [NEW]
    When a unit discovers a new cell, all the units belonging to the same cell get informed of the 
    new discovery
----------------------------------------------------------------------------------------------------------------
 (14) {08/04/2019 13:00} Refactoring tribe known cell system : Inaki
 1. [REFACT] ref [NEW 11.1]
    Moved information from known cells to the tribe. The reason is it feels more natural that way. Also, added
      some reusable code to AgWorld.
 2. [REFACT]
    Changed Tribe returning a collection with all the units. Better return an iterator to cycle on all the units.
----------------------------------------------------------------------------------------------------------------
 (15) {09/04/2019 18:00} Refactoring agent tribe known cells : Inaki
 1. [REFACT]
    Added the same implementation to Agent Tribe storing cells as "Tribe" so code is reused.
 2. [NOTE]
    We could serialize the GameMap of Agent Tribe and send it straight to the 
        agent units with a custom protocol.
----------------------------------------------------------------------------------------------------------------
 (16) {10/04/2019 12:00} The ticker : Inaki
 1. [NEW]
    Created the world clock to function on ticks. The delayed behaviors now use the tick as a measure.
        The speed of the game can change by the time between ticks.
 2. [TODO]
    We need a configurator to store parameters like time between ticks.
----------------------------------------------------------------------------------------------------------------
 (17) {10/04/2019 14:00} The ticker : Inaki
 1. [NEW]
    Added the concept "Strategy". The idea is to encapsulate every Unit behaviour with a priority and a reaction to 
        events. This events could be sent by the Tribe. It's still WIP but we can figure out what can be changed
        or added.
----------------------------------------------------------------------------------------------------------------
 (18) {11/04/2019 12:00} Graph map implementation : Inaki
 1. [NEW]
    Changed the way tribe and unit store the map. Now is a complete directed graph. The graph is able to compute
        Dijkstra to find the best path to the new cells as they are added.
 2. [NOTE]
    The world still uses the set of cells and a much simpler implementation of the game map. That is because as 
        the world there is no need to know the best paths between cells. And it will respond faster to requests.
 3. [REFACT]
    Refactored the positioning of the units. After much thought I concluded that we must only alow square maps
        with even length sides. This way the hexagon pattern can be naturally re-computed at the edges of the maps.
 4. [REMOVE]
    Removed the TribeMap implementation. Even if we use relative positioning at the end, the graph map implementation
        can be adapted.
 5. [FIX]
    Added an easy way to filter log messages to system out form the agents.
----------------------------------------------------------------------------------------------------------------
 (19) {12/04/2019 14:00} Group 1 Ontology : Inaki
 1. [NEW]
    Added new ontology for Group1. I needed a couple of new protocols between AgUnit and AgTribe.
        I used protege 3.5 :  https://protege.stanford.edu/download/protege/3.5/installanywhere/Web_Installers/
        TWhe protege files are in ./docs
 2. [NEW]
    New protocol NotifyUnitOwnership so that the unit knows the tribe AID once its created.
 3. [NEW]
    New protcol WhereAmI so that the unit can ask the tribe where is currently situated.
 4. [TODO]
    The WhereAmI protocol implementation is not complete. Should be used on demand whenever the unit wants
        to know the position.
----------------------------------------------------------------------------------------------------------------
 (20) {14/04/2019 12:30} Create unit strategy : Inaki
 1. [COMPLETE]
    Completed the create unit strategy. The strategy first follows the shortest path to the closest town hall
        and then requests a new unit. When complete, it lowers priority to the minimum so the WaitStrategy takes
        its place. This can be changed in the future to work with something else than priorities for
         "one-shot" strategies, maybe this strategies can be triggered and then they are deleted.
 2. [BUG]
    When creating a second unit with some uncovered map, the unit does not know about previously discovered map.
        Maybe the solution is to stream the tribe map to the new units. Or, to delegate the map just to the tribe, thus
        the units will have to ask every time for directions.
 3. [TODO]
    The building ontology must be fixed to allow only one type of building.
 4. [TODO]
    The Unit structure in AgWorld and AgTribe could use a MapCell reference instead of a 
        coordinate position.
----------------------------------------------------------------------------------------------------------------
 (21) {16/04/2019 18:40} Tribe known cell informing new units : Inaki
 1. [NEW]
    Now the tribe informs the newly created unit of all the cells known to the
        tribe. For now it reuses the NotifyNewlyDiscoveredCell protocol.
 2. [NOTE] ref [NEW 21.1]
    This potentially sends a lot of messages. One for every known cell.
----------------------------------------------------------------------------------------------------------------
 (22) {17/04/2019 12:00} Free Explore Strategy : Inaki
 1. [NEW]
    Added the free explore strategy. The unit performing this strategy tries to run around the whole map. It finds
        the shortest route to unexplored cells. It eventually stops when all the missing cells are explored.
 2. [FIX]
    There were several mistakes on the positioning of units. From the unit cell positioner and from the units
        themselves. Units were not updating the current position when traveling.
 3. [COMPLETE]
    Added missing target cell information when receiving an INFORM from the MoveToCell protocol. Now the units
        take note of the target cell information if not already notified by the tribe.
----------------------------------------------------------------------------------------------------------------
 (23) {24/04/2019 12:00} Configurator : Inaki
 1. [NEW]
    Added configuration properties and MapGenerator JSON support. The WorldMap reads parameters from MapGenerator's
      output file. This file can be specified in the properties.
 2. [NOTE]
    The following libraries were added.
    Apache Commons configuration library:
        https://commons.apache.org/proper/commons-configuration/download_configuration.cgi
    Dependencies:
        https://commons.apache.org/proper/commons-logging/download_logging.cgi
        https://commons.apache.org/proper/commons-lang/download_lang.cgi
        http://commons.apache.org/proper/commons-beanutils/download_beanutils.cgi
        https://commons.apache.org/proper/commons-text/download_text.cgi
        http://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.9.8/
        http://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.9.8/
        http://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.9.8/
 3. [TODO]
    We have to discuss whether the tribe knows the maximum map size or not. Implementations will vary depending on 
      this decission. Also, some map sizes do not make sense (e.g. width 5 and height 5 do not stack well)
      in the "hexagonal tiling" scenario, we must adress this issue.
----------------------------------------------------------------------------------------------------------------
 (24) {25/04/2019 12:00} Web GUI Endpoint : Inaki
 1. [COMPLETE]
    Completed implementation of web GUI and added the corresponding reactions to unit creation and unit movement.
    The AgWorld uses a wrapper class to use the GUI. The wrapper avoids unnecessary errors when there is no 
    connection to the endpoint so it works without it.
 2. [NOTE]
    To start the GUI follow the instructions located in docs/ folder. The ./woa.properties file contains the file paths
    and the address needed for the program to start properly.
 3. [TODO]
    We need to use the map data starting positions and resources. For now only the size of the map is used.
 4. [TODO]
    Setup an actual end game, so the agents and the GUI end properly. Maybe with a timer for now.
 5. [TODO] ref [TODO 23.3]
    The map size for AgTribe, AgUnit and Tribe is set manually (hard-coded integers). We need to decide where we 
    define this or if is needed at all.
----------------------------------------------------------------------------------------------------------------
 (25) {26/04/2019 18:00} Map tile configuration : Inaki
 1. [COMPLETE] ref [TODO 24.3]
    Added WorldMapConfigurator to load the map resource data and the starting positions. The configurator can 
    add the townhall of new tribes using this data.
 2. [NOTE]
    The MapCell now can be modified by its contents. This is because no cells can be substitued in the GameMap
     but they can be modified when building a Town Hall for example.
----------------------------------------------------------------------------------------------------------------
 (26) {28/04/2019 17:30} Creating town hall : Martin
 1. [COMPLETE]
    - As a unit I want to create a new town hall so that a new city is added to my territories
    - As the world I want to cancel the building of a Town Hall when the game is over so that I can finish 
      myself without anybody waiting for me.
    - As the world I want to check the conditions of creating a new Town Hall so that I can proceed with or 
      interrupt the construction process: 
	-Tribe: As it happens with the creation of the unit, purchaseTownHall, canAffordTownHall and refundTownHall
	are implemented.
    - As the world I want to confirm a unit about the result of a town hall creation request so that it can 
      finish the new city creation process:  
	- SomeoneIsBuilding(MapCell) variable is added in order to check that no one is building in that cell
	- In case a unit is already building, its current building transaction is rolled back(canceled). To do so, Transaction
	reference is added in the Unit, and we only have to call refundUnitTransaction method (Unit).
    - WoaDefinitions are update: town hall, store and farm are added and their costs are added.
 2. [TODO]
    UC 2.1.2.1 SCENARIO 5: A unit asks to create a Town Hall and, then, asks for exploiting some resource before finishing
    the building construction.
 3. [NOTE]
    When requesting for a building creation, while being building another building, the resources of the building that 
    is being built are taken into account.
----------------------------------------------------------------------------------------------------------------
 (27) {28/04/2019 21:45} Refactoring + Cell details and Unit positions : Inaki
 1. [REFACT] ref [COMPLETE 26.1]
   Refactored town hall creation to a generic CellBuildingConstructor which can create any of the tree type of buildings.
   Its functioning is similar to the UnitCellPositioner.
 2. [REFACT]
   Refactored a lot of listener behaviors in AgWorld to remove code weight in the class. The classes behave as helpers
   and use package-private methods of AgWorld, thus they are heavily dependant on this agent.
 3. [COMPLETE]
   Story: As the world I want to inform tribes about the construction of buildings in their known territory so that
    they can adapt their strategy.
   Used the same helper concept as in [REFACT 27.2] for the CellDetail protocol in AgTribe and AgUnit. Both agents
   have been grouped in a parent class GroupAgent. This is because they respond equally to NotifyCellDetail messages.
 4. [COMPLETE]
   Story: As the world I want to inform tribes about movements of units in their known territory so that they
    can adapt their strategy.
   Added the same type of helper class to implement the side of AgTribe and AgUnit, as for now they respond equally
    to NotifyUnitPosition messages.
   GroupAgents are notified of unit passbies (if they know the cell) on unit creation and on unit movement completion.
----------------------------------------------------------------------------------------------------------------
 (28) {07/05/2019 13:00} Big refactorizations : Inaki
 1. [REFACT] ref [REFACT 27.2]
    Refactored the listener behaviours of AgWorld to improve code quality and dependencies.
 2. [REFACT] ref [COMPLETE 27.3]
    Refactored as well the listener behaviours for AgTribe and AgUnit.
 3. [REFACT]
    Wrapped the Ontology and Codec usages into CommunicationStandard so its easier to use and removes unnecesary 
	lines of code.
 4. [NOTE]
    No functionality whatsoever was changed.